package com.nms.drivechenxiao.analysis.interfaces;

import java.util.ArrayList;
import java.util.List;

import com.nms.drivechenxiao.analysis.tool.CoreOper;
import com.nms.drivechenxiao.analysis.tool.CxtOpLump;
import com.nms.drivechenxiao.analysis.tool.bean.CxtATTable;
import com.nms.drivechenxiao.analysis.tool.bean.CxtAtomType;
import com.nms.drivechenxiao.analysis.tool.bean.CxtOpItem;
import com.nms.drivechenxiao.service.bean.CXNEObject;
import com.nms.drivechenxiao.service.bean.protsdh.SdhPortObject;
import com.nms.drivechenxiao.service.bean.protsdh.ac.SdhAcObject;

public class AnalysisSdhAc extends CxtOpLump {

	/**
	 * 创建SdhAc
	 * @param sdhPortObject
	 * @param sdhAcObject
	 * @param session
	 * @param seqid
	 * @return
	 */
	public byte[] createSDHAc(SdhPortObject sdhPortObject, SdhAcObject sdhAcObject, int session, int seqid) {
		byte[] command = SDHAc("create", sdhPortObject, sdhAcObject, session, seqid);
		return command;
	}

	/**
	 * 修改SdhAc
	 * @param sdhPortObject
	 * @param sdhAcObject
	 * @param session
	 * @param seqid
	 * @return
	 */
	public byte[] updateSDHAc(SdhPortObject sdhPortObject, SdhAcObject sdhAcObject, int session, int seqid) {
		byte[] command = SDHAc("update", sdhPortObject, sdhAcObject, session, seqid);
		return command;
	}

	/**
	 * 删除AC
	 * @param sdhPortObject
	 * @param sdhAcObject
	 * @param session
	 * @param seqid
	 * @return
	 */
	public byte[] deleteSDHAc(SdhPortObject sdhPortObject, SdhAcObject sdhAcObject, int session, int seqid) {
		List<CxtOpItem> cxtOpItems = new ArrayList<CxtOpItem>();

		cxtOpItems.add(begin(3));
		cxtOpItems.add(cd("ne/interfaces/sdh/" + sdhPortObject.getName()));
		cxtOpItems.add(delete(sdhAcObject.getName()));
		cxtOpItems.add(commit());

		return cxtOpItemsToCommand(cxtOpItems, session, seqid);
	}
	//生成查询命令
	public byte[] selectAllSDHAc(int session, int seqid) {
		List<CxtOpItem> cxtOpItems = new ArrayList<CxtOpItem>();
		String s = null;

		cxtOpItems.add(begin(3));
		cxtOpItems.add(cd("ne/interfaces/sdh"));
		cxtOpItems.add(get(s, 2));

		byte[] command = getCommandBytes(cxtOpItems);
		command = getHeaderCommandBytes(CoreOper.ECXTMSG_REQ_OPS, command, session, seqid);
		return command;
	}

	/**
	 * 解析查询SDHAc
	 * 
	 * @param command
	 * @param CXNEObject
	 * @return
	 */
	public List<SdhAcObject> analysisSDHAc(byte[] command, CXNEObject CXNEObject) {
		List<SdhAcObject> sdhAcObjectl = new ArrayList<SdhAcObject>();
		int start = 49;
		byte[] tt = command;
		//		byte[] tt = new byte[] { 114, 109, 116, 1, 0, 0, 15, 125, 34, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 0, 0, 0, 4, 32, 0, 0, 0, 8, 115, 116, 109, 49, 46, 51, 46, 49, 48, 0, 0, 0, 43, 32, 0, 0, 0, 9, 49, 46, 48, 46, 49, 46, 49, 46, 51, 48, 0, 0, 0, 18, 32, 0, 0, 0, 5, 97, 100, 109, 105, 110, 19, 0, 0, 0, 1, 32, 0, 0, 0, 7, 99, 104, 101, 99, 107, 106, 50, 1, 0, 32, 0, 0, 0, 7, 99, 104, 101, 99, 107, 118, 53, 1, 1, 32, 0, 0, 0, 4, 100, 101, 115, 99, 32, 0, 0, 0, 3, 112, 116, 110, 32, 0, 0, 0, 8, 101, 120, 112, 101, 99, 116, 106, 50, 32, 0, 0, 0, 3, 112, 116, 110, 32, 0, 0, 0, 8, 101, 120, 112, 101, 99, 116, 118, 53, 19, 0, 0, 0, 2, 32, 0, 0, 0, 7, 105, 102, 105, 110, 100, 101, 120, 19, 1, 2, 0, 1, 32,
		//				0, 0, 0, 6, 105, 102, 110, 97, 109, 101, 32, 0, 0, 0, 18, 115, 116, 109, 49, 46, 51, 46, 49, 47, 49, 46, 48, 46, 49, 46, 49, 46, 51, 32, 0, 0, 0, 5, 108, 97, 98, 101, 108, 19, 0, 0, 0, 0, 32, 0, 0, 0, 8, 108, 98, 108, 104, 119, 114, 101, 115, 19, 0, 0, 0, 0, 32, 0, 0, 0, 4, 111, 112, 101, 114, 19, 0, 0, 0, 1, 32, 0, 0, 0, 10, 112, 101, 114, 112, 114, 111, 102, 105, 108, 101, 32, 0, 0, 0, 6, 118, 99, 49, 50, 46, 48, 32, 0, 0, 0, 10, 114, 101, 99, 101, 105, 118, 101, 100, 106, 50, 32, 0, 0, 0, 0, 32, 0, 0, 0, 10, 114, 101, 99, 101, 105, 118, 101, 100, 118, 53, 19, 0, 0, 0, 7, 32, 0, 0, 0, 3, 114, 101, 102, 19, 0, 0, 0, 0, 32, 0, 0, 0, 10, 115, 100, 104, 105, 102, 105, 110, 100, 101, 120, 19, 8, 33, 3, 1, 32, 0, 0, 0, 6, 115, 101, 110, 100, 106, 50, 32, 0, 0, 0, 3, 112, 116,
		//				110, 32, 0, 0, 0, 6, 115, 101, 110, 100, 118, 53, 19, 0, 0, 0, 2, 32, 0, 0, 0, 9, 49, 46, 48, 46, 49, 46, 49, 46, 52, 48, 0, 0, 0, 18, 32, 0, 0, 0, 5, 97, 100, 109, 105, 110, 19, 0, 0, 0, 1, 32, 0, 0, 0, 7, 99, 104, 101, 99, 107, 106, 50, 1, 0, 32, 0, 0, 0, 7, 99, 104, 101, 99, 107, 118, 53, 1, 1, 32, 0, 0, 0, 4, 100, 101, 115, 99, 32, 0, 0, 0, 3, 112, 116, 110, 32, 0, 0, 0, 8, 101, 120, 112, 101, 99, 116, 106, 50, 32, 0, 0, 0, 3, 112, 116, 110, 32, 0, 0, 0, 8, 101, 120, 112, 101, 99, 116, 118, 53, 19, 0, 0, 0, 2, 32, 0, 0, 0, 7, 105, 102, 105, 110, 100, 101, 120, 19, 1, 2, 0, 3, 32, 0, 0, 0, 6, 105, 102, 110, 97, 109, 101, 32, 0, 0, 0, 18, 115, 116, 109, 49, 46, 51, 46, 49, 47, 49, 46, 48, 46, 49, 46, 49, 46, 52, 32, 0, 0, 0, 5, 108, 97, 98, 101, 108, 19, 0, 0, 0, 0, 32,
		//				0, 0, 0, 8, 108, 98, 108, 104, 119, 114, 101, 115, 19, 0, 0, 0, 0, 32, 0, 0, 0, 4, 111, 112, 101, 114, 19, 0, 0, 0, 1, 32, 0, 0, 0, 10, 112, 101, 114, 112, 114, 111, 102, 105, 108, 101, 32, 0, 0, 0, 6, 118, 99, 49, 50, 46, 48, 32, 0, 0, 0, 10, 114, 101, 99, 101, 105, 118, 101, 100, 106, 50, 32, 0, 0, 0, 0, 32, 0, 0, 0, 10, 114, 101, 99, 101, 105, 118, 101, 100, 118, 53, 19, 0, 0, 0, 7, 32, 0, 0, 0, 3, 114, 101, 102, 19, 0, 0, 0, 0, 32, 0, 0, 0, 10, 115, 100, 104, 105, 102, 105, 110, 100, 101, 120, 19, 8, 33, 3, 1, 32, 0, 0, 0, 6, 115, 101, 110, 100, 106, 50, 32, 0, 0, 0, 3, 112, 116, 110, 32, 0, 0, 0, 6, 115, 101, 110, 100, 118, 53, 19, 0, 0, 0, 2, 32, 0, 0, 0, 9, 49, 46, 48, 46, 49, 46, 50, 46, 52, 48, 0, 0, 0, 18, 32, 0, 0, 0, 5, 97, 100, 109, 105, 110, 19, 0, 0, 0, 1,
		//				32, 0, 0, 0, 7, 99, 104, 101, 99, 107, 106, 50, 1, 0, 32, 0, 0, 0, 7, 99, 104, 101, 99, 107, 118, 53, 1, 1, 32, 0, 0, 0, 4, 100, 101, 115, 99, 32, 0, 0, 0, 3, 112, 116, 110, 32, 0, 0, 0, 8, 101, 120, 112, 101, 99, 116, 106, 50, 32, 0, 0, 0, 3, 112, 116, 110, 32, 0, 0, 0, 8, 101, 120, 112, 101, 99, 116, 118, 53, 19, 0, 0, 0, 2, 32, 0, 0, 0, 7, 105, 102, 105, 110, 100, 101, 120, 19, 1, 2, 0, 2, 32, 0, 0, 0, 6, 105, 102, 110, 97, 109, 101, 32, 0, 0, 0, 18, 115, 116, 109, 49, 46, 51, 46, 49, 47, 49, 46, 48, 46, 49, 46, 50, 46, 52, 32, 0, 0, 0, 5, 108, 97, 98, 101, 108, 19, 0, 0, 0, 0, 32, 0, 0, 0, 8, 108, 98, 108, 104, 119, 114, 101, 115, 19, 0, 0, 0, 0, 32, 0, 0, 0, 4, 111, 112, 101, 114, 19, 0, 0, 0, 1, 32, 0, 0, 0, 10, 112, 101, 114, 112, 114, 111, 102, 105, 108, 101, 32,
		//				0, 0, 0, 6, 118, 99, 49, 50, 46, 48, 32, 0, 0, 0, 10, 114, 101, 99, 101, 105, 118, 101, 100, 106, 50, 32, 0, 0, 0, 0, 32, 0, 0, 0, 10, 114, 101, 99, 101, 105, 118, 101, 100, 118, 53, 19, 0, 0, 0, 7, 32, 0, 0, 0, 3, 114, 101, 102, 19, 0, 0, 0, 0, 32, 0, 0, 0, 10, 115, 100, 104, 105, 102, 105, 110, 100, 101, 120, 19, 8, 33, 3, 1, 32, 0, 0, 0, 6, 115, 101, 110, 100, 106, 50, 32, 0, 0, 0, 3, 112, 116, 110, 32, 0, 0, 0, 6, 115, 101, 110, 100, 118, 53, 19, 0, 0, 0, 2, 32, 0, 0, 0, 5, 97, 100, 109, 105, 110, 19, 0, 0, 0, 1, 32, 0, 0, 0, 3, 97, 108, 115, 1, 0, 32, 0, 0, 0, 8, 97, 108, 115, 100, 101, 108, 97, 121, 19, 0, 0, 0, 60, 32, 0, 0, 0, 8, 97, 108, 115, 115, 104, 116, 117, 112, 19, 0, 0, 0, 2, 32, 0, 0, 0, 7, 99, 104, 101, 99, 107, 99, 50, 1, 1, 32, 0, 0, 0, 7, 99, 104, 101,
		//				99, 107, 106, 48, 1, 0, 32, 0, 0, 0, 7, 99, 104, 101, 99, 107, 106, 49, 1, 0, 32, 0, 0, 0, 4, 100, 101, 115, 99, 32, 0, 0, 0, 3, 112, 116, 110, 32, 0, 0, 0, 8, 100, 110, 117, 103, 114, 111, 117, 112, 19, 0, 0, 0, 0, 32, 0, 0, 0, 8, 101, 120, 112, 101, 99, 116, 99, 50, 19, 0, 0, 0, 2, 32, 0, 0, 0, 8, 101, 120, 112, 101, 99, 116, 106, 48, 32, 0, 0, 0, 3, 112, 116, 110, 32, 0, 0, 0, 8, 101, 120, 112, 101, 99, 116, 106, 49, 32, 0, 0, 0, 3, 112, 116, 110, 32, 0, 0, 0, 7, 104, 112, 115, 100, 116, 104, 114, 19, 0, 0, 0, 5, 32, 0, 0, 0, 7, 104, 112, 115, 102, 116, 104, 114, 19, 0, 0, 0, 3, 32, 0, 0, 0, 7, 105, 102, 105, 110, 100, 101, 120, 19, 8, 33, 3, 1, 32, 0, 0, 0, 6, 105, 102, 110, 97, 109, 101, 19, 8, 33, 3, 1, 32, 0, 0, 0, 6, 106, 48, 109, 111, 100, 101, 19, 0, 0, 0, 1, 32,
		//				0, 0, 0, 6, 106, 49, 109, 111, 100, 101, 19, 0, 0, 0, 1, 32, 0, 0, 0, 8, 108, 111, 111, 112, 98, 97, 99, 107, 19, 0, 0, 0, 0, 32, 0, 0, 0, 5, 109, 115, 112, 105, 100, 19, 0, 0, 0, 0, 32, 0, 0, 0, 7, 109, 115, 115, 100, 116, 104, 114, 19, 0, 0, 0, 5, 32, 0, 0, 0, 7, 109, 115, 115, 102, 116, 104, 114, 19, 0, 0, 0, 3, 32, 0, 0, 0, 4, 111, 112, 101, 114, 19, 0, 0, 0, 2, 32, 0, 0, 0, 10, 112, 101, 114, 112, 114, 111, 102, 105, 108, 101, 32, 0, 0, 0, 6, 115, 116, 109, 49, 46, 48, 32, 0, 0, 0, 10, 114, 101, 99, 101, 105, 118, 101, 100, 99, 50, 19, 0, 0, 0, -1, 32, 0, 0, 0, 10, 114, 101, 99, 101, 105, 118, 101, 100, 106, 48, 32, 0, 0, 0, 0, 32, 0, 0, 0, 10, 114, 101, 99, 101, 105, 118, 101, 100, 106, 49, 32, 0, 0, 0, 0, 32, 0, 0, 0, 3, 114, 101, 102, 19, 0, 0, 0, 0, 32, 0, 0, 0,
		//				8, 114, 101, 103, 115, 100, 116, 104, 114, 19, 0, 0, 0, 5, 32, 0, 0, 0, 8, 114, 101, 103, 115, 102, 116, 104, 114, 19, 0, 0, 0, 3, 32, 0, 0, 0, 6, 115, 101, 110, 100, 99, 50, 19, 0, 0, 0, 2, 32, 0, 0, 0, 6, 115, 101, 110, 100, 106, 48, 32, 0, 0, 0, 3, 112, 116, 110, 32, 0, 0, 0, 6, 115, 101, 110, 100, 106, 49, 32, 0, 0, 0, 3, 112, 116, 110, 32, 0, 0, 0, 10, 115, 102, 112, 101, 120, 112, 116, 121, 112, 101, 19, 0, 0, 0, 2, 32, 0, 0, 0, 7, 115, 102, 112, 116, 121, 112, 101, 19, 0, 0, 0, 1, 32, 0, 0, 0, 9, 115, 102, 112, 118, 101, 110, 100, 111, 114, 32, 0, 0, 0, 0, 32, 0, 0, 0, 15, 115, 115, 109, 111, 117, 116, 112, 117, 116, 101, 110, 97, 98, 108, 101, 1, 0, 32, 0, 0, 0, 10, 115, 119, 105, 116, 99, 104, 112, 111, 114, 116, 19, 0, 0, 0, 8, 32, 0, 0, 0, 4, 116, 121, 112, 101,
		//				19, 0, 0, 0, 1, 32, 0, 0, 0, 10, 119, 97, 118, 101, 108, 101, 110, 103, 116, 104, 19, 0, 0, 0, 0, 32, 0, 0, 0, 8, 115, 116, 109, 49, 46, 51, 46, 50, 48, 0, 0, 0, 40, 32, 0, 0, 0, 5, 97, 100, 109, 105, 110, 19, 0, 0, 0, 0, 32, 0, 0, 0, 3, 97, 108, 115, 1, 0, 32, 0, 0, 0, 8, 97, 108, 115, 100, 101, 108, 97, 121, 19, 0, 0, 0, 60, 32, 0, 0, 0, 8, 97, 108, 115, 115, 104, 116, 117, 112, 19, 0, 0, 0, 2, 32, 0, 0, 0, 7, 99, 104, 101, 99, 107, 99, 50, 1, 1, 32, 0, 0, 0, 7, 99, 104, 101, 99, 107, 106, 48, 1, 0, 32, 0, 0, 0, 7, 99, 104, 101, 99, 107, 106, 49, 1, 0, 32, 0, 0, 0, 4, 100, 101, 115, 99, 32, 0, 0, 0, 3, 112, 116, 110, 32, 0, 0, 0, 8, 100, 110, 117, 103, 114, 111, 117, 112, 19, 0, 0, 0, 0, 32, 0, 0, 0, 8, 101, 120, 112, 101, 99, 116, 99, 50, 19, 0, 0, 0, 2, 32, 0, 0, 0, 8,
		//				101, 120, 112, 101, 99, 116, 106, 48, 32, 0, 0, 0, 3, 112, 116, 110, 32, 0, 0, 0, 8, 101, 120, 112, 101, 99, 116, 106, 49, 32, 0, 0, 0, 3, 112, 116, 110, 32, 0, 0, 0, 7, 104, 112, 115, 100, 116, 104, 114, 19, 0, 0, 0, 5, 32, 0, 0, 0, 7, 104, 112, 115, 102, 116, 104, 114, 19, 0, 0, 0, 3, 32, 0, 0, 0, 7, 105, 102, 105, 110, 100, 101, 120, 19, 8, 33, 3, 2, 32, 0, 0, 0, 6, 105, 102, 110, 97, 109, 101, 19, 8, 33, 3, 2, 32, 0, 0, 0, 6, 106, 48, 109, 111, 100, 101, 19, 0, 0, 0, 1, 32, 0, 0, 0, 6, 106, 49, 109, 111, 100, 101, 19, 0, 0, 0, 1, 32, 0, 0, 0, 8, 108, 111, 111, 112, 98, 97, 99, 107, 19, 0, 0, 0, 0, 32, 0, 0, 0, 5, 109, 115, 112, 105, 100, 19, 0, 0, 0, 0, 32, 0, 0, 0, 7, 109, 115, 115, 100, 116, 104, 114, 19, 0, 0, 0, 5, 32, 0, 0, 0, 7, 109, 115, 115, 102, 116, 104, 114,
		//				19, 0, 0, 0, 3, 32, 0, 0, 0, 4, 111, 112, 101, 114, 19, 0, 0, 0, 6, 32, 0, 0, 0, 10, 112, 101, 114, 112, 114, 111, 102, 105, 108, 101, 32, 0, 0, 0, 6, 115, 116, 109, 49, 46, 48, 32, 0, 0, 0, 10, 114, 101, 99, 101, 105, 118, 101, 100, 99, 50, 19, 0, 0, 0, -1, 32, 0, 0, 0, 10, 114, 101, 99, 101, 105, 118, 101, 100, 106, 48, 32, 0, 0, 0, 0, 32, 0, 0, 0, 10, 114, 101, 99, 101, 105, 118, 101, 100, 106, 49, 32, 0, 0, 0, 0, 32, 0, 0, 0, 3, 114, 101, 102, 19, 0, 0, 0, 0, 32, 0, 0, 0, 8, 114, 101, 103, 115, 100, 116, 104, 114, 19, 0, 0, 0, 5, 32, 0, 0, 0, 8, 114, 101, 103, 115, 102, 116, 104, 114, 19, 0, 0, 0, 3, 32, 0, 0, 0, 6, 115, 101, 110, 100, 99, 50, 19, 0, 0, 0, 2, 32, 0, 0, 0, 6, 115, 101, 110, 100, 106, 48, 32, 0, 0, 0, 3, 112, 116, 110, 32, 0, 0, 0, 6, 115, 101, 110, 100,
		//				106, 49, 32, 0, 0, 0, 3, 112, 116, 110, 32, 0, 0, 0, 10, 115, 102, 112, 101, 120, 112, 116, 121, 112, 101, 19, 0, 0, 0, 2, 32, 0, 0, 0, 7, 115, 102, 112, 116, 121, 112, 101, 19, 0, 0, 0, 1, 32, 0, 0, 0, 9, 115, 102, 112, 118, 101, 110, 100, 111, 114, 32, 0, 0, 0, 0, 32, 0, 0, 0, 15, 115, 115, 109, 111, 117, 116, 112, 117, 116, 101, 110, 97, 98, 108, 101, 1, 0, 32, 0, 0, 0, 10, 115, 119, 105, 116, 99, 104, 112, 111, 114, 116, 19, 0, 0, 0, 8, 32, 0, 0, 0, 4, 116, 121, 112, 101, 19, 0, 0, 0, 1, 32, 0, 0, 0, 10, 119, 97, 118, 101, 108, 101, 110, 103, 116, 104, 19, 0, 0, 0, 0, 32, 0, 0, 0, 8, 115, 116, 109, 49, 46, 52, 46, 49, 48, 0, 0, 0, 40, 32, 0, 0, 0, 5, 97, 100, 109, 105, 110, 19, 0, 0, 0, 0, 32, 0, 0, 0, 3, 97, 108, 115, 1, 0, 32, 0, 0, 0, 8, 97, 108, 115, 100, 101, 108,
		//				97, 121, 19, 0, 0, 0, 60, 32, 0, 0, 0, 8, 97, 108, 115, 115, 104, 116, 117, 112, 19, 0, 0, 0, 2, 32, 0, 0, 0, 7, 99, 104, 101, 99, 107, 99, 50, 1, 1, 32, 0, 0, 0, 7, 99, 104, 101, 99, 107, 106, 48, 1, 0, 32, 0, 0, 0, 7, 99, 104, 101, 99, 107, 106, 49, 1, 0, 32, 0, 0, 0, 4, 100, 101, 115, 99, 32, 0, 0, 0, 3, 112, 116, 110, 32, 0, 0, 0, 8, 100, 110, 117, 103, 114, 111, 117, 112, 19, 0, 0, 0, 0, 32, 0, 0, 0, 8, 101, 120, 112, 101, 99, 116, 99, 50, 19, 0, 0, 0, 2, 32, 0, 0, 0, 8, 101, 120, 112, 101, 99, 116, 106, 48, 32, 0, 0, 0, 3, 112, 116, 110, 32, 0, 0, 0, 8, 101, 120, 112, 101, 99, 116, 106, 49, 32, 0, 0, 0, 3, 112, 116, 110, 32, 0, 0, 0, 7, 104, 112, 115, 100, 116, 104, 114, 19, 0, 0, 0, 5, 32, 0, 0, 0, 7, 104, 112, 115, 102, 116, 104, 114, 19, 0, 0, 0, 3, 32, 0, 0, 0,
		//				7, 105, 102, 105, 110, 100, 101, 120, 19, 8, 33, 4, 1, 32, 0, 0, 0, 6, 105, 102, 110, 97, 109, 101, 19, 8, 33, 4, 1, 32, 0, 0, 0, 6, 106, 48, 109, 111, 100, 101, 19, 0, 0, 0, 1, 32, 0, 0, 0, 6, 106, 49, 109, 111, 100, 101, 19, 0, 0, 0, 1, 32, 0, 0, 0, 8, 108, 111, 111, 112, 98, 97, 99, 107, 19, 0, 0, 0, 0, 32, 0, 0, 0, 5, 109, 115, 112, 105, 100, 19, 0, 0, 0, 0, 32, 0, 0, 0, 7, 109, 115, 115, 100, 116, 104, 114, 19, 0, 0, 0, 5, 32, 0, 0, 0, 7, 109, 115, 115, 102, 116, 104, 114, 19, 0, 0, 0, 3, 32, 0, 0, 0, 4, 111, 112, 101, 114, 19, 0, 0, 0, 12, 32, 0, 0, 0, 10, 112, 101, 114, 112, 114, 111, 102, 105, 108, 101, 32, 0, 0, 0, 6, 115, 116, 109, 49, 46, 48, 32, 0, 0, 0, 10, 114, 101, 99, 101, 105, 118, 101, 100, 99, 50, 19, 0, 0, 0, 2, 32, 0, 0, 0, 10, 114, 101, 99, 101, 105,
		//				118, 101, 100, 106, 48, 32, 0, 0, 0, 0, 32, 0, 0, 0, 10, 114, 101, 99, 101, 105, 118, 101, 100, 106, 49, 32, 0, 0, 0, 0, 32, 0, 0, 0, 3, 114, 101, 102, 19, 0, 0, 0, 0, 32, 0, 0, 0, 8, 114, 101, 103, 115, 100, 116, 104, 114, 19, 0, 0, 0, 5, 32, 0, 0, 0, 8, 114, 101, 103, 115, 102, 116, 104, 114, 19, 0, 0, 0, 3, 32, 0, 0, 0, 6, 115, 101, 110, 100, 99, 50, 19, 0, 0, 0, 2, 32, 0, 0, 0, 6, 115, 101, 110, 100, 106, 48, 32, 0, 0, 0, 3, 112, 116, 110, 32, 0, 0, 0, 6, 115, 101, 110, 100, 106, 49, 32, 0, 0, 0, 3, 112, 116, 110, 32, 0, 0, 0, 10, 115, 102, 112, 101, 120, 112, 116, 121, 112, 101, 19, 0, 0, 0, 2, 32, 0, 0, 0, 7, 115, 102, 112, 116, 121, 112, 101, 19, 0, 0, 0, 1, 32, 0, 0, 0, 9, 115, 102, 112, 118, 101, 110, 100, 111, 114, 32, 0, 0, 0, 0, 32, 0, 0, 0, 15, 115, 115, 109,
		//				111, 117, 116, 112, 117, 116, 101, 110, 97, 98, 108, 101, 1, 0, 32, 0, 0, 0, 10, 115, 119, 105, 116, 99, 104, 112, 111, 114, 116, 19, 0, 0, 0, 8, 32, 0, 0, 0, 4, 116, 121, 112, 101, 19, 0, 0, 0, 1, 32, 0, 0, 0, 10, 119, 97, 118, 101, 108, 101, 110, 103, 116, 104, 19, 0, 0, 0, 0, 32, 0, 0, 0, 8, 115, 116, 109, 49, 46, 52, 46, 50, 48, 0, 0, 0, 40, 32, 0, 0, 0, 5, 97, 100, 109, 105, 110, 19, 0, 0, 0, 0, 32, 0, 0, 0, 3, 97, 108, 115, 1, 0, 32, 0, 0, 0, 8, 97, 108, 115, 100, 101, 108, 97, 121, 19, 0, 0, 0, 60, 32, 0, 0, 0, 8, 97, 108, 115, 115, 104, 116, 117, 112, 19, 0, 0, 0, 2, 32, 0, 0, 0, 7, 99, 104, 101, 99, 107, 99, 50, 1, 1, 32, 0, 0, 0, 7, 99, 104, 101, 99, 107, 106, 48, 1, 0, 32, 0, 0, 0, 7, 99, 104, 101, 99, 107, 106, 49, 1, 0, 32, 0, 0, 0, 4, 100, 101, 115, 99, 32,
		//				0, 0, 0, 3, 112, 116, 110, 32, 0, 0, 0, 8, 100, 110, 117, 103, 114, 111, 117, 112, 19, 0, 0, 0, 0, 32, 0, 0, 0, 8, 101, 120, 112, 101, 99, 116, 99, 50, 19, 0, 0, 0, 2, 32, 0, 0, 0, 8, 101, 120, 112, 101, 99, 116, 106, 48, 32, 0, 0, 0, 3, 112, 116, 110, 32, 0, 0, 0, 8, 101, 120, 112, 101, 99, 116, 106, 49, 32, 0, 0, 0, 3, 112, 116, 110, 32, 0, 0, 0, 7, 104, 112, 115, 100, 116, 104, 114, 19, 0, 0, 0, 5, 32, 0, 0, 0, 7, 104, 112, 115, 102, 116, 104, 114, 19, 0, 0, 0, 3, 32, 0, 0, 0, 7, 105, 102, 105, 110, 100, 101, 120, 19, 8, 33, 4, 2, 32, 0, 0, 0, 6, 105, 102, 110, 97, 109, 101, 19, 8, 33, 4, 2, 32, 0, 0, 0, 6, 106, 48, 109, 111, 100, 101, 19, 0, 0, 0, 1, 32, 0, 0, 0, 6, 106, 49, 109, 111, 100, 101, 19, 0, 0, 0, 1, 32, 0, 0, 0, 8, 108, 111, 111, 112, 98, 97, 99, 107, 19, 0,
		//				0, 0, 0, 32, 0, 0, 0, 5, 109, 115, 112, 105, 100, 19, 0, 0, 0, 0, 32, 0, 0, 0, 7, 109, 115, 115, 100, 116, 104, 114, 19, 0, 0, 0, 5, 32, 0, 0, 0, 7, 109, 115, 115, 102, 116, 104, 114, 19, 0, 0, 0, 3, 32, 0, 0, 0, 4, 111, 112, 101, 114, 19, 0, 0, 0, 12, 32, 0, 0, 0, 10, 112, 101, 114, 112, 114, 111, 102, 105, 108, 101, 32, 0, 0, 0, 6, 115, 116, 109, 49, 46, 48, 32, 0, 0, 0, 10, 114, 101, 99, 101, 105, 118, 101, 100, 99, 50, 19, 0, 0, 0, 2, 32, 0, 0, 0, 10, 114, 101, 99, 101, 105, 118, 101, 100, 106, 48, 32, 0, 0, 0, 0, 32, 0, 0, 0, 10, 114, 101, 99, 101, 105, 118, 101, 100, 106, 49, 32, 0, 0, 0, 0, 32, 0, 0, 0, 3, 114, 101, 102, 19, 0, 0, 0, 0, 32, 0, 0, 0, 8, 114, 101, 103, 115, 100, 116, 104, 114, 19, 0, 0, 0, 5, 32, 0, 0, 0, 8, 114, 101, 103, 115, 102, 116, 104, 114, 19,
		//				0, 0, 0, 3, 32, 0, 0, 0, 6, 115, 101, 110, 100, 99, 50, 19, 0, 0, 0, 2, 32, 0, 0, 0, 6, 115, 101, 110, 100, 106, 48, 32, 0, 0, 0, 3, 112, 116, 110, 32, 0, 0, 0, 6, 115, 101, 110, 100, 106, 49, 32, 0, 0, 0, 3, 112, 116, 110, 32, 0, 0, 0, 10, 115, 102, 112, 101, 120, 112, 116, 121, 112, 101, 19, 0, 0, 0, 2, 32, 0, 0, 0, 7, 115, 102, 112, 116, 121, 112, 101, 19, 0, 0, 0, 1, 32, 0, 0, 0, 9, 115, 102, 112, 118, 101, 110, 100, 111, 114, 32, 0, 0, 0, 0, 32, 0, 0, 0, 15, 115, 115, 109, 111, 117, 116, 112, 117, 116, 101, 110, 97, 98, 108, 101, 1, 0, 32, 0, 0, 0, 10, 115, 119, 105, 116, 99, 104, 112, 111, 114, 116, 19, 0, 0, 0, 8, 32, 0, 0, 0, 4, 116, 121, 112, 101, 19, 0, 0, 0, 1, 32, 0, 0, 0, 10, 119, 97, 118, 101, 108, 101, 110, 103, 116, 104, 19, 0, 0, 0, 0, 0, };
		byte[] t = new byte[tt.length - start];
		System.arraycopy(tt, start, t, 0, tt.length - start);
		sdhAcObjectl = super.analysisTabble(3, "sdhac", t);
		List<SdhAcObject> sdhAcObjectlistreturn = new ArrayList<SdhAcObject>();
		for(SdhAcObject sd : sdhAcObjectl){
			if(null != sd){
				sdhAcObjectlistreturn.add(sd);
			}
		}
		return sdhAcObjectlistreturn;
	}

	/*
	 * 创建或修改ac
	 */
	public byte[] SDHAc(String type, SdhPortObject sdhPortObject, SdhAcObject sdhAcObject, int session, int seqid) {
		List<CxtOpItem> cxtOpItems = new ArrayList<CxtOpItem>();
//System.out.println("AnalysisSdhAc.SDHAc .  sdhAc = "+sdhAcObject.toString());
		List<CxtAtomType> cxtAtomTypes = new ArrayList<CxtAtomType>();
		cxtAtomTypes.add(getCxtAtomType(CxtAtomType.AT_STRING, "admin"));
		cxtAtomTypes.add(getCxtAtomType(CxtAtomType.AT_STRING, sdhAcObject.getAdmin()));
//		cxtAtomTypes.add(set("expectj2", sdhAcObject.getExpectj2()));
				
		cxtAtomTypes.add(getCxtAtomType(CxtAtomType.AT_STRING, "expectj2"));
		cxtAtomTypes.add(getCxtAtomType(CxtAtomType.AT_STRING, isNul(sdhAcObject.getExpectj2()) ));
		cxtAtomTypes.add(getCxtAtomType(CxtAtomType.AT_STRING, "receivedj2"));
		cxtAtomTypes.add(getCxtAtomType(CxtAtomType.AT_STRING, isNul(sdhAcObject.getReceivedj2()) ));
		cxtAtomTypes.add(getCxtAtomType(CxtAtomType.AT_STRING, "sendj2"));
		cxtAtomTypes.add(getCxtAtomType(CxtAtomType.AT_STRING, isNul(sdhAcObject.getSendj2())));
		cxtAtomTypes.add(getCxtAtomType(CxtAtomType.AT_STRING, "receivedj2"));
		cxtAtomTypes.add(getCxtAtomType(CxtAtomType.AT_STRING, isNul(sdhAcObject.getReceivedj2()) ));
		cxtAtomTypes.add(getCxtAtomType(CxtAtomType.AT_STRING, "checkj2"));
		cxtAtomTypes.add(getCxtAtomType(CxtAtomType.AT_STRING, sdhAcObject.getCheckj2()));
		cxtAtomTypes.add(getCxtAtomType(CxtAtomType.AT_STRING, "checkv5"));
		cxtAtomTypes.add(getCxtAtomType(CxtAtomType.AT_STRING, sdhAcObject.getCheckv5()));
		cxtAtomTypes.add(getCxtAtomType(CxtAtomType.AT_STRING, "sendv5"));
		cxtAtomTypes.add(getCxtAtomType(CxtAtomType.AT_STRING, isNul(sdhAcObject.getSendv5()) ));		
		
		CxtATTable cxtATTable = getCxtATTable(cxtAtomTypes.size() / 2, cxtAtomTypes);

		cxtOpItems.add(begin(3));
		cxtOpItems.add(cd("ne/interfaces/sdh/" + sdhPortObject.getName()));
		if ("create".equals(type)) {
			cxtOpItems.add(create(sdhAcObject.getName(), cxtATTable));
		} else if ("update".equals(type)) {
			cxtOpItems.add(mset(sdhAcObject.getName(), cxtATTable));
		}
		cxtOpItems.add(commit());

		byte[] command = getCommandBytes(cxtOpItems);
		command = getHeaderCommandBytes(CoreOper.ECXTMSG_REQ_OPS, command, session, seqid);
		return command;
	}
	public String isNul(String value){
		if ("".equals(value) || value == null) {
			value = "0";
		}
		return value;
	}
}
