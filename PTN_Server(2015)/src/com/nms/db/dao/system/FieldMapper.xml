<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nms.db.dao.system.FieldMapper" >
  <resultMap id="BaseResultMap" type="Field" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="FieldName" property="fieldName" jdbcType="VARCHAR" />
    <result column="FieldX" property="fieldX" jdbcType="INTEGER" />
    <result column="FieldY" property="fieldY" jdbcType="INTEGER" />
    <result column="mSiteId" property="mSiteId" jdbcType="INTEGER" />
    <result column="objectType" property="objectType" jdbcType="VARCHAR" />
    <result column="workIP" property="workIP" jdbcType="INTEGER" />
    <result column="parentId" property="parentId" jdbcType="INTEGER" />
    <result column="netWorkId" property="netWorkId" jdbcType="INTEGER" />
    <result column="groupId" property="groupId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, FieldName, FieldX, FieldY, mSiteId, objectType, parentId, workIP, netWorkId, 
    groupId
  </sql>
  <select id="selectByPrimaryKey" resultType="Field" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from field
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from field
    where ID = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insertSelective" parameterType="Field" >
    insert into field
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="fieldname != null" >
        FieldName,
      </if>
      <if test="fieldx != null" >
        FieldX,
      </if>
      <if test="fieldy != null" >
        FieldY,
      </if>
      <if test="msiteid != null" >
        mSiteId,
      </if>
      <if test="objecttype != null" >
        objectType,
      </if>
      <if test="parentid != null" >
        parentId,
      </if>
      <if test="workip != null" >
        workIP,
      </if>
      <if test="networkid != null" >
        netWorkId,
      </if>
      <if test="groupid != null" >
        groupId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fieldname != null" >
        #{fieldname,jdbcType=VARCHAR},
      </if>
      <if test="fieldx != null" >
        #{fieldx,jdbcType=INTEGER},
      </if>
      <if test="fieldy != null" >
        #{fieldy,jdbcType=INTEGER},
      </if>
      <if test="msiteid != null" >
        #{msiteid,jdbcType=INTEGER},
      </if>
      <if test="objecttype != null" >
        #{objecttype,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null" >
        #{parentid,jdbcType=INTEGER},
      </if>
      <if test="workip != null" >
        #{workip,jdbcType=VARCHAR},
      </if>
      <if test="networkid != null" >
        #{networkid,jdbcType=INTEGER},
      </if>
      <if test="groupid != null" >
        #{groupid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="Field" >
    update field
    <set >
      <if test="fieldname != null" >
        FieldName = #{fieldname,jdbcType=VARCHAR},
      </if>
      <if test="fieldx != null" >
        FieldX = #{fieldx,jdbcType=INTEGER},
      </if>
      <if test="fieldy != null" >
        FieldY = #{fieldy,jdbcType=INTEGER},
      </if>
      <if test="msiteid != null" >
        mSiteId = #{msiteid,jdbcType=INTEGER},
      </if>
      <if test="objecttype != null" >
        objectType = #{objecttype,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null" >
        parentId = #{parentid,jdbcType=INTEGER},
      </if>
      <if test="workip != null" >
        workIP = #{workip,jdbcType=VARCHAR},
      </if>
      <if test="networkid != null" >
        netWorkId = #{networkid,jdbcType=INTEGER},
      </if>
      <if test="groupid != null" >
        groupId = #{groupid,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="Field" >
    update field
    set FieldName = #{fieldname,jdbcType=VARCHAR},
      FieldX = #{fieldx,jdbcType=INTEGER},
      FieldY = #{fieldy,jdbcType=INTEGER},
      mSiteId = #{msiteid,jdbcType=INTEGER},
      objectType = #{objecttype,jdbcType=VARCHAR},
      parentId = #{parentid,jdbcType=INTEGER},
      workIP = #{workip,jdbcType=VARCHAR},
      netWorkId = #{networkid,jdbcType=INTEGER},
      groupId = #{groupid,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="queryByUserIdField" parameterType="UserInst" resultType="Field">
       select 
       <include refid="Base_Column_List" />
       from field        
       <where>   
          objectType='field'        
               <if test="userInst.isAll ==0">
                 and ID in (select field_id from user_field where user_id=#{userInst.User_Id} )
                 </if>	              			
	    </where>
    </select>
    
  <select id="queryByCondition" parameterType="Field" resultMap="BaseResultMap">      
       SELECT t.ID,t.FieldName,(SELECT A.FieldName  FROM field A where t.parentId=a.ID ) parentName ,parentId ,t.objecttype 
       FROM field t 
       <where>
        t.objecttype='subnet'  
       <if test="field.fieldName!='ALL' "> 
       AND t.parentId =#{field.id}
	   </if>
       </where>                            	              			   
    </select> 
     
  <select id="comboboxList"  resultMap="BaseResultMap">
       select 
       <include refid="Base_Column_List" />
       from field 
       <where>
       1=1 and objectType='field'
       </where>       
    </select>
    
  <update id="update" parameterType="Field" >
    update field set fieldName = #{field.fieldName} , parentId=#{field.parentId} where id = #{field.id}  
  </update>
  <insert id="insert" parameterType="map" useGeneratedKeys="true" keyProperty="field.id">
   insert into field(fieldName,parentId,objecttype) values(#{field.fieldName,jdbcType=VARCHAR},#{field.parentId,jdbcType=INTEGER},#{type})   
  </insert>

  <delete id="delete" parameterType="Field" >
    delete from field
    where ID = #{field.id,jdbcType=INTEGER}
  </delete>
  
   <select id="selectByGroupId" parameterType="java.lang.Integer"  resultMap="BaseResultMap">     
      select
      <include refid="Base_Column_List" />
      from field where netWorkId= #{fieldId}
    </select>
  
    <select id="selectByParentId" parameterType="java.lang.Integer" resultMap="BaseResultMap">     
      select
      <include refid="Base_Column_List" />
      from field where parentId=#{fieldId}
    </select>
    
    <select id="querySiteByCondition" parameterType="Field" resultMap="BaseResultMap">     
      SELECT   
      <include refid="Base_Column_List" />
      from field WHERE objectType='subnet' and parentId = #{field.id}
    </select>
    
     <select id="getSiteParent" parameterType="SiteInst" resultMap="BaseResultMap">     
      SELECT   
      <include refid="Base_Column_List" />
      from field where 1=1 and id=#{siteInst.FieldID} or groupId=#{siteInst.FieldID}
    </select>
    
     <select id="queryByConditionAll" parameterType="map" resultMap="BaseResultMap">     
      SELECT   
      <include refid="Base_Column_List" />
      from field 
      <where>
      1=1
      <if test="field!=null">
         <if test="field.id!=0">
            and id=#{field.id}
         </if>
         <if test="field.objectType!=null and field.objectType!='' ">
            and objectType=#{field.objectType}
         </if>
      </if>
      </where>
    </select>
     <select id="queryByConditions" parameterType="Field" resultMap="BaseResultMap">      
      select * from field f,network n 
      <where>
      1=1 and f.objectType='field'      
       <if test="field.id>0 "> 
       and f.id=#{field.id}
	   </if>
	   <if test="field.mSiteId>0 "> 
       and f.mSiteId=#{field.mSiteId}
	   </if>
       <if test="field.groupId>0 "> 
       and f.groupId=#{field.groupId}
	   </if> 
	   and f.netWorkId = n.netWorkId ORDER BY f.groupId 
	    </where>                     	              			   
    </select> 
   		
   	 <select id="queryByNetWorkId" parameterType="java.lang.Integer" resultMap="BaseResultMap">      
      select * from field where netWorkId=#{netWorkId}             			   
    </select> 	
    
    <select id="checkNameExist" parameterType="java.lang.String" resultMap="BaseResultMap">      
      select * from field where FieldName=#{name}             			   
    </select> 		
    
    <update id="updateField" parameterType="Field" >
    update field set fieldName = #{field.fieldName} ,fieldX=#{field.fieldX},fieldY=#{field.fieldY},mSiteId=#{field.mSiteId},
    netWorkId=#{field.netWorkId},groupId=#{field.groupId} where id=#{field.id} and objectType='field'
  </update>
  
  <insert id="insertField" parameterType="Field" useGeneratedKeys="true" keyProperty="field.id">
  insert into `field`(fieldName,fieldX,fieldY,objectType,netWorkId,groupId) values(#{field.fieldName,jdbcType=VARCHAR},#{field.fieldX},#{field.fieldY},'field',#{field.netWorkId},#{field.groupId})  
  </insert>
  
   <select id="queryByidCondition" resultMap="BaseResultMap">
       select
       <include refid="Base_Column_List" />
       from field WHERE ID IN 
       <foreach item="item" index="index" collection="fieldids" open="(" separator= ", " close=" )">
        #{item}
       </foreach>   
    </select>
    
    <select id="subnetCombo" resultMap="BaseResultMap" parameterType="java.lang.Integer">
       select
       <include refid="Base_Column_List" />
       from field where 1=1 and objectType='subnet' 
       <if test="id !=null and id!='' ">and parentId= #{id}</if>     
    </select>

 <select id="queryByUserId" resultMap="BaseResultMap" parameterType="UserInst">
       select
       <include refid="Base_Column_List" />
      from field where objectType='field' 
       <if test="isAll==0"> and id  in (select field_id from user_field where user_id=#{User_Id} )</if>     
    </select>
    
    <select id="queryNoMsite" resultMap="BaseResultMap" >
      select
      <include refid="Base_Column_List" />
      from field where 1=1 and objectType='field' and mSiteId = 0    
    </select>
    
  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from field where id=#{id}
  </delete>
  
  <delete id="deleteSubNet" parameterType="java.lang.Integer" >
    delete from field where parentId =#{parentId} and objectType='subnet'
  </delete>
  
  <update id="updateBatch" parameterType="Field" >
    update field set fieldName=#{field.fieldName},fieldX=#{fieldX},fieldY=#{fieldY} ,
    mSiteId=#{mSiteId} ,netWorkId=#{netWorkId} ,groupId=#{groupId} where id=#{field.id} 
  </update>
  
   <select id="query_name" resultType="java.lang.Integer" parameterType="map">
     select count(*) as selectcount from field where fieldName=#{afterName} and objectType='subnet'
	<if test="beforeName!=null"> and fieldName!=#{beforeName}</if>		
   </select>
   
    <select id="queryByNameCondition" resultMap="BaseResultMap" parameterType="java.lang.String">
     select*from field where 1=1 and objectType = 'field'
	<if test="name!=null"> and fieldName!=#{name}</if>	
	
   </select>
   
   <select id="select_SBN_north" resultMap="BaseResultMap">
   select*from field
   </select>
</mapper>