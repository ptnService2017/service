<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nms.db.dao.system.NetWorkMapper" >
  <resultMap id="BaseResultMap" type="NetWork" >
    <id column="netWorkId" property="netWorkId" jdbcType="INTEGER" />
    <result column="netX" property="netX" jdbcType="INTEGER" />
    <result column="netY" property="netY" jdbcType="INTEGER" />
    <result column="isDeleteTopo" property="isDeleteTopo" jdbcType="INTEGER" />
    <result column="netWorkName" property="netWorkName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    netWorkId, netX, netY, isDeleteTopo, netWorkName
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from network
    where netWorkId = #{networkid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from network
    where netWorkId = #{networkid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="NetWork"  useGeneratedKeys="true" keyProperty="netWorkId">
   insert into netWork(netX,netY,isDeleteTopo,netWorkName)
    values
   (#{netX},#{netY},#{isDeleteTopo},#{netWorkName})
  </insert>
  <insert id="insertSelective" parameterType="NetWork" >
    insert into network
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="networkid != null" >
        netWorkId,
      </if>
      <if test="netx != null" >
        netX,
      </if>
      <if test="nety != null" >
        netY,
      </if>
      <if test="isdeletetopo != null" >
        isDeleteTopo,
      </if>
      <if test="networkname != null" >
        netWorkName,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="networkid != null" >
        #{networkid,jdbcType=INTEGER},
      </if>
      <if test="netx != null" >
        #{netx,jdbcType=INTEGER},
      </if>
      <if test="nety != null" >
        #{nety,jdbcType=INTEGER},
      </if>
      <if test="isdeletetopo != null" >
        #{isdeletetopo,jdbcType=INTEGER},
      </if>
      <if test="networkname != null" >
        #{networkname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="NetWork" >
    update network
    <set >
      <if test="netx != null" >
        netX = #{netx,jdbcType=INTEGER},
      </if>
      <if test="nety != null" >
        netY = #{nety,jdbcType=INTEGER},
      </if>
      <if test="isdeletetopo != null" >
        isDeleteTopo = #{isdeletetopo,jdbcType=INTEGER},
      </if>
      <if test="networkname != null" >
        netWorkName = #{networkname,jdbcType=VARCHAR},
      </if>
    </set>
    where netWorkId = #{networkid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="NetWork" >
    update network
    set netX = #{netx,jdbcType=INTEGER},
      netY = #{nety,jdbcType=INTEGER},
      isDeleteTopo = #{isdeletetopo,jdbcType=INTEGER},
      netWorkName = #{networkname,jdbcType=VARCHAR}
    where netWorkId = #{networkid,jdbcType=INTEGER}
  </update>
  
  <select id="select" resultType="NetWork">
       select
       <include refid="Base_Column_List" />
       from netWork  
  </select>
  
  <select id="queryByUserIdField" resultType="NetWork" parameterType="UserInst">
       select * from netWork 
       <if test="isAll = 0">
       		where netWorkId in (select field_id from user_field where user_id=#{User_Id} )
       </if>
  </select>
  
   <update id="update" parameterType="NetWork" >
    update netWork set netX=#{netX},netY=#{netY},isDeleteTopo=#{isDeleteTopo} ,netWorkName=#{netWorkName}  where netWorkId=#{netWorkId}
  </update>
  
   <select id="selectByNetWorkId" resultType="NetWork" parameterType="NetWork">
       select
       <include refid="Base_Column_List" />
       from netWork where netWorkId=#{netWorkId}
  </select>
  
  <delete id="delete" parameterType="NetWork" >
    delete from network
    where netWorkId = #{netWorkId}
  </delete>
</mapper>