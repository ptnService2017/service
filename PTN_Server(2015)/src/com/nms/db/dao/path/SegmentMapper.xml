<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nms.db.dao.path.SegmentMapper" >
  <resultMap id="BaseResultMap" type="Segment" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="NAME" property="NAME" jdbcType="VARCHAR" />
    <result column="BANDWIDTH" property="BANDWIDTH" jdbcType="VARCHAR" />
    <result column="TYPE" property="TYPE" jdbcType="INTEGER" />
    <result column="ASITEID" property="ASITEID" jdbcType="INTEGER" />
    <result column="speed" property="speedSegment" jdbcType="VARCHAR" />
    <result column="ZSITEID" property="ZSITEID" jdbcType="INTEGER" />
    <result column="APORTID" property="APORTID" jdbcType="INTEGER" />
    <result column="ZPORTID" property="ZPORTID" jdbcType="INTEGER" />
    <result column="CREATUSER" property="CREATUSER" jdbcType="VARCHAR" />
    <result column="CREATTIME" property="CREATTIME" jdbcType="TIMESTAMP" />
    <result column="ASLOT" property="aSlotNumber" jdbcType="INTEGER" />
    <result column="ZSLOT" property="zSlotNumber" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, NAME, BANDWIDTH, TYPE, ASITEID, speed, ZSITEID, APORTID, ZPORTID, CREATUSER, 
    CREATTIME, ASLOT, ZSLOT
  </sql>
 <delete id="deletById" parameterType="java.lang.Integer">
  	delete from segment where ID=#{0}
  </delete>
  
  <insert id="insert" parameterType="Segment"  useGeneratedKeys="true" keyProperty="id">
    insert into segment
    (NAME,BANDWIDTH,TYPE,ASITEID,ZSITEID,APORTID,ZPORTID,
    CREATUSER,CREATTIME,ASLOT,ZSLOT,speed) values
    (#{NAME},#{BANDWIDTH},#{TYPE},#{ASITEID},#{ZSITEID},
    #{APORTID},#{ZPORTID},#{CREATUSER},#{CREATTIME,jdbcType=TIMESTAMP},#{aSlotNumber},#{zSlotNumber},#{speedSegment})
  </insert>

 <update id="update" parameterType="Segment" >
    update segment set 
    NAME=#{NAME},BANDWIDTH=#{BANDWIDTH},TYPE=#{TYPE},ASITEID=#{ASITEID},ZSITEID=#{ZSITEID},APORTID= #{APORTID},
    ZPORTID=#{ZPORTID},CREATUSER =#{CREATUSER},CREATTIME =#{CREATTIME,jdbcType=TIMESTAMP},ASLOT =#{aSlotNumber},
    ZSLOT =#{zSlotNumber},speed=#{speedSegment} where ID=#{id}
  </update>

  <select id="queryByCondition" resultMap="SegmentMap" parameterType="Segment" >
    SELECT s.ID, s.NAME, s.BANDWIDTH, s.TYPE, s.ASITEID, s.ZSITEID, s.APORTID, s.ZPORTID,s.ASLOT, 
    s.ZSLOT,s.speed,sa.CellId AS showaSiteName, sz.CellId AS showzSiteName, pa.portName AS showaPortName, 
    pz.portName AS showzPortName, s.CREATUSER, s.CREATTIME ,sa.site_inst_id as saSiteid,sz.site_inst_id as szSiteId,
    pa.portId as paPortId,pz.portId as pzPortId FROM segment s, site_inst sa, site_inst sz, 
    port_inst pa, port_inst pz 
    <where>
    s.ASITEID = sa.site_inst_id AND s.ZSITEID = sz.site_inst_id AND s.APORTID = pa.portId AND s.ZPORTID = pz.portId
    <if test="segment.id>0 "> and s.ID=#{segment.id}</if>
    <if test="segment.NAME!=null and segment.NAME!='' "> and s.NAME=#{segment.NAME}</if>
    <if test="segment.ASITEID!=0 "> and s.ASITEID=#{segment.ASITEID}</if>
    <if test="segment.ZSITEID!=0 "> and s.ZSITEID=#{segment.ZSITEID}</if>
    <if test="segment.APORTID!=0 "> and s.APORTID=#{segment.APORTID}</if>
    <if test="segment.ZPORTID!=0 "> and s.ZPORTID=#{segment.ZPORTID}</if>
    <if test="segment.speedSegment!=null and segment.speedSegment!='' "> and s.speed=#{segment.speedSegment}</if>
    <if test="segment.CREATUSER!=null and segment.CREATUSER!='' "> and s.CREATUSER=#{segment.CREATUSER}</if> 
    </where> 
  </select>
  <resultMap id="SegmentMap" type="Segment" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="NAME" property="NAME" jdbcType="VARCHAR" />
    <result column="BANDWIDTH" property="BANDWIDTH" jdbcType="VARCHAR" />
    <result column="TYPE" property="TYPE" jdbcType="INTEGER" />
    <result column="ASITEID" property="ASITEID" jdbcType="INTEGER" />
    <result column="speed" property="speedSegment" jdbcType="VARCHAR" />
    <result column="ZSITEID" property="ZSITEID" jdbcType="INTEGER" />
    <result column="APORTID" property="APORTID" jdbcType="INTEGER" />
    <result column="ZPORTID" property="ZPORTID" jdbcType="INTEGER" />
    <result column="CREATUSER" property="CREATUSER" jdbcType="VARCHAR" />
    <result column="CREATTIME" property="CREATTIME" jdbcType="TIMESTAMP" />
    <result column="ASLOT" property="aSlotNumber" jdbcType="INTEGER" />
    <result column="ZSLOT" property="zSlotNumber" jdbcType="INTEGER" /> 
    <result column="showaSiteName" property="ShowSiteAname" jdbcType="INTEGER" />
    <result column="showzSiteName" property="ShowSiteZname" jdbcType="INTEGER" />
    <result column="showaPortName" property="ShowPortAname" jdbcType="INTEGER" />
    <result column="showzPortName" property="ShowPortZname" jdbcType="INTEGER" /> 
  </resultMap>
  
   <select id="queryBySiteIdAndPortId" resultMap="SegmentMap" parameterType="Segment" >
    SELECT s.ID, s.speed, s.NAME, s.BANDWIDTH, s.TYPE, s.ASITEID, s.ZSITEID, s.APORTID, s.ZPORTID, s.ASLOT, s.ZSLOT,sa.CellId AS showaSiteName,
     sz.CellId AS showzSiteName, pa.portName AS showaPortName, pz.portName AS showzPortName, s.CREATUSER, s.CREATTIME FROM segment s, site_inst sa,
      site_inst sz, port_inst pa, port_inst pz WHERE s.aSiteId = sa.site_inst_id AND s.zSiteId = sz.site_inst_id AND s.aPortId = pa.portId AND 
      s.zPortId = pz.portId
      <if test="ASITEID > 0">
     	 and (s.ASITEID = #{ASITEID} or s.ZSITEID = #{ASITEID})
      </if>
      <if test="APORTID > 0">
      	and (s.APORTID = #{APORTID} or s.ZPORTID = #{APORTID})
      </if>
  </select>
  
   <select id="query_site" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from segment
   where asiteid=#{siteId} or zsiteid=#{siteId}
  </select>
  
  
   <select id="query_search" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from segment where (APORTID=#{portIdOne} AND ZPORTID =#{portIdTwo} ) or (APORTID=#{portIdTwo} AND ZPORTID=#{portIdOne})
  </select>
  
  <select id="query_SegmentPortId" resultMap="BaseResultMap">
  	select * from segment where aportid=#{0} or zportid=#{0}
  </select>
  
   <select id="query_name" resultType="java.lang.Integer" parameterType="map">
    select count(*) as selectcount from segment where name=#{afterName}
    <if test="beforeName!=null">and name!=#{beforeName}</if>
  </select>
  
  <select id="select_north" resultMap="BaseResultMap">
  SELECT
	s.id,s.`NAME`,s.ASITEID,s.ZSITEID, s.APORTID,s.ZPORTID
FROM
	`segment` s
  </select>
</mapper>