<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nms.db.dao.alarm.WarningLevelMapper" >
  <resultMap id="BaseResultMap" type="WarningLevel" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="WarningName" property="warningname" jdbcType="VARCHAR" />
    <result column="WarningNote" property="warningnote" jdbcType="VARCHAR" />
    <result column="WarningLevel_temp" property="warninglevel_temp" jdbcType="INTEGER" />
    <result column="WarningLevel" property="warninglevel" jdbcType="INTEGER" />
    <result column="WarningCode" property="warningcode" jdbcType="INTEGER" />
    <result column="WarningObject" property="warningobject" jdbcType="VARCHAR" />
    <result column="WarningType" property="warningtype" jdbcType="INTEGER" />
    <result column="WarningDescribe" property="warningdescribe" jdbcType="VARCHAR" />
    <result column="WaringEffect" property="waringeffect" jdbcType="VARCHAR" />
    <result column="WaringRemark" property="waringremark" jdbcType="VARCHAR" />
    <result column="Manufacturer" property="manufacturer" jdbcType="INTEGER" />
    <result column="WarningMayReason" property="warningmayreason" jdbcType="VARCHAR" />
    <result column="WarningAdvice" property="warningadvice" jdbcType="VARCHAR" />
    <result column="WarningEnNote" property="warningEnNote" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, WarningName, WarningNote, WarningLevel_temp, WarningLevel, WarningCode, WarningObject, 
    WarningType, WarningDescribe, WaringEffect, WaringRemark, Manufacturer, WarningMayReason, 
    WarningAdvice, WarningEnNote
  </sql>
  <select id="queryByCondition" resultMap="BaseResultMap" parameterType="WarningLevel" >
    select 
    <include refid="Base_Column_List" />
    from warninglevel where 1=1
    <if test="id > 0">
    and id = #{id}
    </if>
    <if test="warningcode > 0">
    and WarningCode = #{warningcode}
    </if>
    <if test="warninglevel > 0">
    and WarningLevel = #{warninglevel}
    </if>
    <if test="warninglevel_temp > 0">
    and WarningLevel_temp = #{warninglevel_temp}
    </if>
    <if test="manufacturer > 0">
    and manufacturer = #{manufacturer}
    </if>
  </select>
  <delete id="delete" parameterType="java.lang.Integer" >
    delete from warninglevel
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="WarningLevel" >
    insert into warninglevel (id, WarningName, WarningNote, 
      WarningLevel_temp, WarningLevel, WarningCode, 
      WarningObject, WarningType, WarningDescribe, 
      WaringEffect, WaringRemark, Manufacturer, 
      WarningMayReason, WarningAdvice, WarningEnNote
      )
    values (#{id,jdbcType=INTEGER}, #{warningname,jdbcType=VARCHAR}, #{warningnote,jdbcType=VARCHAR}, 
      #{warninglevel_temp,jdbcType=INTEGER}, #{warninglevel,jdbcType=INTEGER}, #{warningcode,jdbcType=INTEGER}, 
      #{warningobject,jdbcType=VARCHAR}, #{warningtype,jdbcType=INTEGER}, #{warningdescribe,jdbcType=VARCHAR}, 
      #{waringeffect,jdbcType=VARCHAR}, #{waringremark,jdbcType=VARCHAR}, #{manufacturer,jdbcType=INTEGER}, 
      #{warningmayreason,jdbcType=VARCHAR}, #{warningadvice,jdbcType=VARCHAR}, #{warningEnNote,jdbcType=VARCHAR}
      )
  </insert>
  <update id="update" parameterType="WarningLevel" >
    update warninglevel
    set WarningName = #{warningname,jdbcType=VARCHAR},
      WarningNote = #{warningnote,jdbcType=VARCHAR},
      WarningLevel_temp = #{warninglevel_temp,jdbcType=INTEGER},
      WarningLevel = #{warninglevel,jdbcType=INTEGER},
      WarningCode = #{warningcode,jdbcType=INTEGER},
      WarningObject = #{warningobject,jdbcType=VARCHAR},
      WarningType = #{warningtype,jdbcType=INTEGER},
      WarningDescribe = #{warningdescribe,jdbcType=VARCHAR},
      WaringEffect = #{waringeffect,jdbcType=VARCHAR},
      WaringRemark = #{waringremark,jdbcType=VARCHAR},
      Manufacturer = #{manufacturer,jdbcType=INTEGER},
      WarningMayReason = #{warningmayreason,jdbcType=VARCHAR},
      WarningAdvice = #{warningadvice,jdbcType=VARCHAR},
      WarningEnNote = #{warningEnNote,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>