<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nms.db.dao.alarm.CurrentAlarmInfoMapper" >
  <resultMap id="BaseResultMap" type="CurrentAlarmInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="siteid" property="siteId" jdbcType="INTEGER" />
    <result column="slotId" property="slotId" jdbcType="INTEGER" />
    <result column="objectid" property="objectId" jdbcType="INTEGER" />
    <result column="objecttype" property="objectType" jdbcType="INTEGER" typeHandler="com.nms.db.enums.IntEnumTypeHandler"/>
    <result column="objectname" property="objectName" jdbcType="VARCHAR" />
    <result column="alarmcode" property="alarmCode" jdbcType="INTEGER" />
    <result column="alarmlevel" property="alarmLevel" jdbcType="INTEGER" />
    <result column="happenedtime" property="happenedtime" jdbcType="VARCHAR" />
    <result column="confirmtime" property="confirmtime" jdbcType="VARCHAR" />
    <result column="clearedtime" property="cleanTime" jdbcType="VARCHAR" />
    <result column="ackuser" property="ackUser" jdbcType="VARCHAR" />
    <result column="comments" property="commentS" jdbcType="VARCHAR" />
    <result column="capabilityCode" property="capabilityCode" jdbcType="INTEGER" />
    <result column="capabilityIdentity" property="capabilityIdentity" jdbcType="VARCHAR" />
    <result column="alarmlevel_temp" property="warningLevel_temp" jdbcType="INTEGER" />
    <result column="isCleared" property="isClear" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, siteid, slotId, objectid, objecttype, objectname, alarmcode, alarmlevel, happenedtime, 
    confirmtime, clearedtime, ackuser, comments, capabilityCode, capabilityIdentity, 
    alarmlevel_temp, isCleared
  </sql>
  <insert id="insert" parameterType="CurrentAlarmInfo" >
    insert into current_alarm (id, siteid, slotId, 
      objectid, objecttype, objectname, 
      alarmcode, alarmlevel, happenedtime, 
      confirmtime, clearedtime, ackuser, 
      comments, capabilityCode, capabilityIdentity, 
      alarmlevel_temp, isCleared)
    values (#{id,jdbcType=INTEGER}, #{siteId,jdbcType=INTEGER}, #{slotId,jdbcType=INTEGER}, 
      #{objectId,jdbcType=INTEGER}, #{objectType,jdbcType=INTEGER,typeHandler=com.nms.db.enums.IntEnumTypeHandler},
       #{objectName,jdbcType=VARCHAR}, 
      #{alarmCode,jdbcType=INTEGER}, #{alarmLevel,jdbcType=INTEGER}, #{happenedtime,jdbcType=VARCHAR}, 
      #{confirmtime,jdbcType=VARCHAR}, #{cleanTime,jdbcType=VARCHAR}, #{ackUser,jdbcType=VARCHAR}, 
      #{commentS,jdbcType=VARCHAR}, #{capabilityCode,jdbcType=INTEGER}, #{capabilityIdentity,jdbcType=VARCHAR}, 
      #{warningLevel_temp,jdbcType=INTEGER}, #{isClear,jdbcType=INTEGER})
  </insert>
  <update id="update" parameterType="CurrentAlarmInfo">
  update  current_alarm as p set 
  p.confirmtime=#{confirmtime,jdbcType=VARCHAR},p.clearedtime=#{cleanTime,jdbcType=VARCHAR},p.ackuser=#{ackUser,jdbcType=VARCHAR},
  p.alarmlevel=#{alarmLevel,jdbcType=INTEGER},p.alarmlevel_temp=#{warningLevel_temp,jdbcType=INTEGER},
  p.comments=#{commentS,jdbcType=VARCHAR},p.isCleared=#{isClear,jdbcType=INTEGER},p.happenedtime=#{happenedtime,jdbcType=VARCHAR} 
  where p.id=#{id,jdbcType=INTEGER} 
  </update>
   <select id="query_join" resultMap="CurrentAlarm" parameterType="map" >
     SELECT s.*, c.*,w.* FROM site_inst s, current_alarm c, warninglevel w WHERE s.site_inst_id = c.siteid AND 
     c.alarmcode = w.WarningCode AND c.alarmlevel = w.WarningLevel AND w.Manufacturer = 
    ( CASE WHEN ( SELECT co.codeValue FROM `code` co WHERE co.id = s.CellEditon ) = '0' THEN 1 ELSE 2 END ) 
   
  <if test="currentAlarm.id>0"> and c.id=#{currentAlarm.id}</if>
  <if test="currentAlarm.siteId!=0"> and c.siteid=#{currentAlarm.siteId}</if>
  <if test="currentAlarm.slotId!=0"> and c.slotId=#{currentAlarm.slotId}</if>
  <if test="currentAlarm.objectId!=0"> and c.objectid=#{currentAlarm.objectId}</if>
  <if test="type != 0"> and c.objecttype=#{type}</if>
  <if test="currentAlarm.alarmCode!=0"> and c.alarmcode=#{currentAlarm.alarmCode}</if>
  <if test="currentAlarm.alarmLevel!=0"> and c.alarmlevel=#{currentAlarm.alarmLevel}</if> 
  <if test="currentAlarm.warningLevel_temp !=0"> and c.alarmlevel_temp=#{currentAlarm.warningLevel_temp}</if>
  <if test="currentAlarm.alarmTime!=null and alarmTime!='' "> and c.happenedtime=#{currentAlarm.alarmTime}</if> 
  <if test="currentAlarm.objectName!=null and currentAlarm.objectName!='' "> and c.objectname=#{currentAlarm.objectName}</if>
    ORDER BY happenedtime desc
  </select>
  <resultMap id="CurrentAlarm" type="CurrentAlarmInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="siteid" property="siteId" jdbcType="INTEGER" />
    <result column="slotId" property="slotId" jdbcType="INTEGER" />
    <result column="objectid" property="objectId" jdbcType="INTEGER" />
    <result column="objecttype" property="objectType" jdbcType="INTEGER" typeHandler="com.nms.db.enums.IntEnumTypeHandler"/>
    <result column="objectname" property="objectName" jdbcType="VARCHAR" />
    <result column="alarmcode" property="alarmCode" jdbcType="INTEGER" />
    <result column="alarmlevel" property="alarmLevel" jdbcType="INTEGER" />
    <result column="happenedtime" property="happenedtime" jdbcType="VARCHAR" />
    <result column="confirmtime" property="confirmtime" jdbcType="VARCHAR" />
    <result column="clearedtime" property="cleanTime" jdbcType="VARCHAR" />
    <result column="ackuser" property="ackUser" jdbcType="VARCHAR" />
    <result column="comments" property="commentS" jdbcType="VARCHAR" />
    <result column="capabilityCode" property="capabilityCode" jdbcType="INTEGER" />
    <result column="capabilityIdentity" property="capabilityIdentity" jdbcType="VARCHAR" />
    <result column="alarmlevel_temp" property="warningLevel_temp" jdbcType="INTEGER" />
    <result column="isCleared" property="isClear" jdbcType="INTEGER" />
    <result column="CellId" property="siteName" jdbcType="INTEGER" />
    <collection property="warningLevel" ofType="WarningLevel" >
        <id property="warningcode" column="w.WarningCode"/>
        <result column="id" property="id" jdbcType="INTEGER" />
        <result column="warningname" property="warningname" jdbcType="VARCHAR" />
        <result column="warningnote" property="warningnote" jdbcType="INTEGER" />
        <result column="warninglevel" property="warninglevel" jdbcType="INTEGER" />
        <result column="warninglevel_temp" property="warninglevel_temp" jdbcType="INTEGER" />
        <result column="warningcode" property="warningcode" jdbcType="INTEGER" />
        <result column="warningobject" property="warningobject" jdbcType="VARCHAR" />
        <result column="warningtype" property="warningtype" jdbcType="INTEGER" />
        <result column="manufacturer" property="manufacturer" jdbcType="INTEGER" />
        <result column="warningdescribe" property="warningdescribe" jdbcType="INTEGER" />
        <result column="waringeffect" property="waringeffect" jdbcType="VARCHAR" />
        <result column="waringremark" property="waringremark" jdbcType="INTEGER" />
        <result column="warningadvice" property="warningadvice" jdbcType="INTEGER" />
        <result column="warningmayreason" property="warningmayreason" jdbcType="INTEGER" />
    </collection>
  </resultMap>
  <update id="updateObjectid" >
		update current_alarm set objectid = #{newTunnelId} where objecttype =#{type} and objectid in 
		<foreach item="item" index="index" collection="ids" open="(" separator="," close=")">  
 		 #{item}  
 		</foreach>
  </update>
   <select id="queryByClent" resultMap="CurrentAlarm" parameterType="CurrentAlarmInfo" >
   SELECT c.*,w.* FROM  current_alarm c, warninglevel w WHERE  c.alarmcode = w.WarningCode AND c.alarmlevel = w.WarningLevel AND w.Manufacturer =1 and c.objectname LIKE '%EMS服务器_%' 
   </select>
   <select id="querySiteid" resultType="java.lang.Integer">
   SELECT site_inst_id from site_inst group by site_inst_id
   </select>
   <select id="queryMaxId" resultType="java.lang.Integer">
   select max(id) as maxid from current_alarm
   </select>
   <select id="selectAllIdList" resultType="java.lang.Integer" parameterType="map" >
   select id from current_alarm where 1=1 
   <if test="siteIdList != null and siteIdList.size() > 0">
   and siteid in
   	<foreach item="item" index="index" collection="siteIdList" open="(" separator="," close=",0)">  
 	 #{item}  
 	</foreach>
   </if>
   <if test="filter != null">
    <if test="type == 2">
    and slotId in
    <foreach item="item" index="index" collection="filter.slotInsts" open="(" separator="," close=",0)">  
 	 #{item}  
 	</foreach>
    </if>
    and alarmcode in
    <foreach item="item" index="index" collection="filter.alarmCodeList" open="(" separator="," close=",0)">  
 	 #{item}  
 	</foreach>
 	and alarmlevel_temp in
 	<foreach item="item" index="index" collection="filter.alarmLevel" open="(" separator="," close=",0)">  
 	 #{item}  
 	</foreach>
    <if test="filter.alarmState == 1">
 	and ackuser is not null
    </if>
    <if test="filter.alarmState != 1">
 	and ackuser is null
    </if>
    <if test="filter.happenTime != null">
    and (happenedtime between #{filter.happenTime} and #{filter.happenEndTime})
    </if>
    <if test="filter.ClearTime != null">
    and (clearedtime between #{filter.ClearTime} and #{filter.ClearEndTime})
    </if>
    <if test="filter.ensureTime != null">
    and (confirmtime between #{filter.ensureTime} and #{filter.ensureEndTime})
    </if>
    <if test="filter.ensureUser != null">
    and ackuser =#{filter.ensureUser}
    </if>
   </if>
   order by id desc
   </select>
   <select id="selectByPage" resultMap="BaseResultMap" parameterType="map" >
    <if test="direction == 0">
    SELECT * FROM current_alarm WHERE id > #{id}
    </if>
    <if test="direction != 0">
    SELECT * FROM current_alarm WHERE id &lt; #{id}
    </if>
   <if test="siteIdList != null and siteIdList.size() > 0">
   and siteid in
   	<foreach item="item" index="index" collection="siteIdList" open="(" separator="," close=",0)">  
 	 #{item}  
 	</foreach>
   </if>
   <if test="filter != null">
    <if test="type == 2">
    and slotId in
    <foreach item="item" index="index" collection="filter.slotInsts" open="(" separator="," close=",0)">  
 	 #{item}  
 	</foreach>
    </if>
    and alarmcode in
    <foreach item="item" index="index" collection="filter.alarmCodeList" open="(" separator="," close=",0)">  
 	 #{item}  
 	</foreach>
 	and alarmlevel_temp in
 	<foreach item="item" index="index" collection="filter.alarmLevel" open="(" separator="," close=",0)">  
 	 #{item}  
 	</foreach>
    <if test="filter.alarmState == 1">
 	and ackuser is not null
    </if>
    <if test="filter.alarmState != 1">
 	and ackuser is null
    </if>
    <if test="filter.happenTime != null">
    and (happenedtime between #{filter.happenTime} and #{filter.happenEndTime})
    </if>
    <if test="filter.ClearTime != null">
    and (clearedtime between #{filter.ClearTime} and #{filter.ClearEndTime})
    </if>
    <if test="filter.ensureTime != null">
    and (confirmtime between #{filter.ensureTime} and #{filter.ensureEndTime})
    </if>
    <if test="filter.ensureUser != null">
    and ackuser =#{filter.ensureUser}
    </if>
   </if>
    <if test="direction == 0">
    ORDER BY id ASC LIMIT #{pageCount}
    </if>
    <if test="direction != 0">
    ORDER BY id DESC LIMIT #{pageCount}
    </if>
   </select>
   <delete id="delete" parameterType="java.lang.Integer" >
   delete from current_alarm where id=#{0}
   </delete>
   <select id="queryCurrBySites" parameterType="java.util.List" resultMap="CurrentAlarm">
  SELECT s.*, c.*,w.* FROM site_inst s, current_alarm c, warninglevel w WHERE s.site_inst_id = c.siteid AND 
     c.alarmcode = w.WarningCode AND c.alarmlevel = w.WarningLevel AND w.Manufacturer = 
    ( CASE WHEN ( SELECT co.codeValue FROM `code` co WHERE co.id = s.CellEditon ) = '0' THEN 1 ELSE 2 END )
    and c.siteid in
    <foreach item="item" index="index" collection="siteIdList" open="(" separator="," close=")">  
 	 #{item}  
 	</foreach>
    ORDER BY happenedtime desc
  </select>
  <delete id="deleteCurrentAlarmInfo" >
  delete from current_alarm where 1=1
  <if test="alarm.siteId > 0">
  and siteid=#{alarm.siteId}
  </if>
  <if test="alarm.objectId > 0">
  and objectid=#{alarm.objectId}
  </if>
  <if test="type > 0">
  and objecttype=#{type}
  </if>
  <if test="alarm.alarmCode > 0">
  and alarmcode=#{alarm.alarmCode}
  </if>
  <if test="alarm.alarmLevel > 0">
  and alarmlevel=#{alarm.alarmLevel}
  </if>
  </delete>
  <select id="queryByClentAlarm" resultMap="CurrentAlarm">
  SELECT c.*,w.* FROM  current_alarm c, warninglevel w WHERE  c.alarmcode = w.WarningCode AND c.alarmlevel = w.WarningLevel
   AND w.Manufacturer =1 and c.objectname LIKE '%EMS服务器_%' and c.alarmcode=#{0} and c.alarmlevel=#{1}
  </select>
  <select id="queryByClentAlarmByObjName" resultMap="CurrentAlarm">
  SELECT c.*,w.* FROM  current_alarm c, warninglevel w WHERE  c.alarmcode = w.WarningCode AND c.alarmlevel = w.WarningLevel
   AND w.Manufacturer =1 and c.objectname LIKE '%EMS服务器_%' and c.alarmcode=#{0} and c.alarmlevel=#{1}
   and c.objectname LIKE "%"#{2}"%"
  </select>
  <select id="queryByClentLevel" resultMap="CurrentAlarm" parameterType="java.lang.Integer">
  SELECT c.*,w.* FROM  current_alarm c, warninglevel w WHERE c.alarmlevel_temp=#{0} AND c.alarmcode = w.WarningCode 
  AND c.alarmlevel = w.WarningLevel AND w.Manufacturer =1 and c.objectname LIKE '%EMS服务器_%' 
  </select>
  <select id="queryByCondition" resultMap="CurrentAlarm" >
  SELECT * from current_alarm c where 1=1
  <if test="alarm.id>0"> and c.id=#{alarm.id}</if>
  <if test="alarm.siteId!=0"> and c.siteid=#{alarm.siteId}</if>
  <if test="alarm.slotId!=0"> and c.slotId=#{alarm.slotId}</if>
  <if test="alarm.objectId!=0"> and c.objectid=#{alarm.objectId}</if>
  <if test="type!=0 "> and c.objecttype=#{type}</if>
  <if test="alarm.alarmCode!=0"> and c.alarmcode=#{alarm.alarmCode}</if>
  <if test="alarm.alarmLevel!=0"> and c.alarmlevel=#{alarm.alarmLevel}</if> 
  <if test="alarm.warningLevel_temp !=0"> and c.alarmlevel_temp=#{alarm.warningLevel_temp}</if>
  <if test="alarm.alarmTime!=null and alarm.alarmTime!='' "> and c.happenedtime=#{alarm.alarmTime}</if> 
  <if test="alarm.objectName!=null and alarm.objectName!='' "> and c.objectname=#{alarm.objectName}</if>
  </select>
  <select id="query_type_id" resultMap="CurrentAlarm" parameterType="map" >
    SELECT * from current_alarm where objecttype=#{objectType} and siteid=#{siteId} and objectid in
   	<foreach item="item" index="index" collection="objectIdList" open="(" separator="," close=",0)">  
 	 #{item}  
 	</foreach>
   </select>
   <resultMap id="TCAAlarm" type="CurrentAlarmInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="siteId" property="siteId" jdbcType="INTEGER" />
    <result column="siteName" property="siteName" jdbcType="VARCHAR" />
    <result column="alarmSource" property="alarmSource" jdbcType="VARCHAR" />
    <result column="performanceType" property="performanceType" jdbcType="VARCHAR" />
    <result column="happenTime" property="happenTime" jdbcType="VARCHAR" />
    <result column="EndTime" property="EndTime" jdbcType="VARCHAR" />
    <result column="granularity" property="granularity" jdbcType="VARCHAR" />
    <result column="threshold" property="threshold" jdbcType="VARCHAR" />
    <result column="remark_en" property="remark_en" jdbcType="VARCHAR" />
    <result column="remark_zh" property="remark_zh" jdbcType="VARCHAR" />
   </resultMap>
   <select id="queryTCAAlarm" resultMap="TCAAlarm" parameterType="com.nms.db.bean.alarm.TCAAlarm">
   SELECT alarm.id as id,alarm.siteId as siteId,s.cellid as siteName,alarm.objectname as alarmSource,
   c.CapabilityType as performanceType,alarm.happenedtime as happenTime,alarm.clearedtime as EndTime,alarm.capabilityIdentity as granularity,
   alarm.capabilityIdentity as threshold,c.CapabilityDisp as remark_en,c.CapabilityDesc as remark_zh
   FROM current_alarm alarm, capability c,site_inst s WHERE alarm.siteid=s.site_inst_id 
   AND alarm.capabilityCode=c.capabilityCode AND c.Manufacturer = ( CASE WHEN ( SELECT co.codeValue FROM `code` co 
   WHERE co.id = s.CellEditon ) = '0' THEN 1 ELSE 2 END )
   <if test="siteId > 0">
   AND alarm.siteid=#{siteId}
   </if>
   <if test="performanceType != null and performanceType != ''">
   AND c.CapabilityType=#{performanceType}
   </if>
   <if test="capabilityCode > 0">
   AND alarm.CapabilityCode=#{capabilityCode}
   </if>
   <if test="alarmSource != null and alarmSource != ''">
   AND alarm.objectname=#{alarmSource}
   </if>
   <if test="capabilityIdentity != null and capabilityIdentity != ''">
   AND alarm.CapabilityIdentity=#{capabilityIdentity}
   </if>
   </select>
   
   <select id="queryByTime_join" resultMap="CurrentAlarm">
   SELECT s.*, c.*,w.* FROM site_inst s, current_alarm c, warninglevel w WHERE s.site_inst_id = c.siteid  
   AND c.alarmcode = w.WarningCode AND c.alarmlevel = w.WarningLevel AND w.Manufacturer = ( CASE WHEN   
   ( SELECT co.codeValue FROM `code` co WHERE co.id = s.CellEditon ) = '0' THEN 1 ELSE 2 END )  
   and c.happenedtime BETWEEN #{0} and #{1}
   </select>
   
   <select id="queryBySlot" resultMap="CurrentAlarm" parameterType="SlotInst">
   SELECT * from current_alarm where 1=1
   <if test="siteId > 0">
   AND siteId = #{siteId}
   </if>
   <if test="id > 0">
   AND slotId = #{id}
   </if>
   order by alarmlevel DESC
   </select>
   
   <select id="selectCurrentAlarmByCond" resultMap="CurrentAlarm">
   SELECT s.CellId,slot.number,c.*, w.* FROM site_inst s INNER JOIN current_alarm c ON s.site_inst_id = c.siteid  
   INNER JOIN slot_inst slot ON slot.id = c.slotId INNER JOIN warninglevel w ON c.alarmcode = w.WarningCode AND c.alarmlevel = w.WarningLevel 
   WHERE c.happenedtime BETWEEN #{startTime} and #{endTime}
   <if test="siteIdList != null and siteIdList.size() > 0">
   AND c.siteid IN
   <foreach item="item" index="index" collection="siteIdList" open="(" separator="," close=")">  
 	 #{item}  
   </foreach>
   </if>
   <if test="alarmSeverityList != null and alarmSeverityList.size() > 0">
   AND w.WarningType IN
   <foreach item="item" index="index" collection="alarmSeverityList" open="(" separator="," close=")">  
 	 #{item}  
   </foreach>
   </if>
   <if test="alarmTypeList != null and alarmTypeList.size() > 0">
   AND w.WarningName IN
   <foreach item="item" index="index" collection="alarmTypeList" open="(" separator="," close=")">  
 	 #{item}  
   </foreach>
   </if>
   <if test="inludeProbCauseList != null and inludeProbCauseList.size() > 0">
   AND c.alarmlevel IN
   <foreach item="item" index="index" collection="inludeProbCauseList" open="(" separator="," close=")">  
 	 #{item}  
   </foreach>
   </if>
   AND w.Manufacturer = (CASE WHEN ( SELECT co.codeValue FROM `code` co WHERE co.id = s.CellEditon ) = '0' THEN 1 ELSE 2 END )
   </select>
   
   <delete id="deleteBySiteId" parameterType="java.lang.Integer">
   delete from current_alarm where siteId=#{0}
   </delete>
   
    <select id="queryNorthRun" resultType="Map">
   		SELECT 
   		w.WarningNote AS "alarmTitle",
	a.isCleared AS "alarmStatus",
	w.WarningType AS "alarmType",
	a.alarmlevel AS "origSeverity",
	a.happenedtime AS "eventTime",
	a.id AS "alarmId",
	w.WarningMayReason AS "specificProblem",
	a.siteid AS "neUID",
	s.CellId AS "neName",
	s.CellType AS "neType",
	a.objectid AS "objectUID",
	a.objecttype AS "objectType",
	a.objectname AS "objectName"
   		FROM `alarm_north`  a
INNER JOIN warninglevel w ON a.alarmcode = w.WarningCode and a.alarmlevel= w.WarningLevel
AND w.Manufacturer = 1
INNER JOIN site_inst s ON a.siteid = s.site_inst_id 
 where 1=1 and 
   		<if test="alarmSeq>0">
   			a.id &gt;#{alarmSeq}
   		</if>
   		<if test="time != null and time !=''">
   			a.createTime &gt;=#{time}
   		</if>
   </select>
</mapper>