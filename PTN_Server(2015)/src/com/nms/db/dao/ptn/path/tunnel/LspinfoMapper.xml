<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nms.db.dao.ptn.path.tunnel.LspinfoMapper">
  <resultMap id="BaseResultMap" type="Lsp">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="tunnelId" jdbcType="INTEGER" property="tunnelid" />
    <result column="pathStatus" jdbcType="INTEGER" property="pathstatus" />
    <result column="aSiteId" jdbcType="INTEGER" property="asiteid" />
    <result column="zSiteId" jdbcType="INTEGER" property="zsiteid" />
    <result column="aPortId" jdbcType="INTEGER" property="aportid" />
    <result column="zPortId" jdbcType="INTEGER" property="zportid" />
    <result column="frontLabelValue" jdbcType="INTEGER" property="frontlabelvalue" />
    <result column="backLabelValue" jdbcType="INTEGER" property="backlabelvalue" />
    <result column="alspbusinessid" jdbcType="INTEGER" property="alspbusinessid" />
    <result column="zlspbusinessid" jdbcType="INTEGER" property="zlspbusinessid" />
    <result column="atunnelbusinessid" jdbcType="INTEGER" property="atunnelbusinessid" />
    <result column="ztunnelbusinessid" jdbcType="INTEGER" property="ztunnelbusinessid" />
    <result column="segmentId" jdbcType="INTEGER" property="segmentid" />
    <result column="aoppositeId" jdbcType="VARCHAR" property="aoppositeid" />
    <result column="zoppositeId" jdbcType="VARCHAR" property="zoppositeid" />
    <result column="sourceMac" jdbcType="VARCHAR" property="sourcemac" />
    <result column="targetMac" jdbcType="VARCHAR" property="targetmac" />
    <result column="frontTtl" jdbcType="INTEGER" property="frontttl" />
    <result column="backTtl" jdbcType="INTEGER" property="backttl" />
  </resultMap>
  <sql id="Base_Column_List">
    id, tunnelId, pathStatus, aSiteId, zSiteId, aPortId, zPortId, frontLabelValue, backLabelValue, 
    alspbusinessid, zlspbusinessid, atunnelbusinessid, ztunnelbusinessid, segmentId, 
    aoppositeId, zoppositeId, sourceMac, targetMac, frontTtl, backTtl
  </sql>
  
  <select id="queryByCondition" parameterType="Lsp" resultType="Lsp">
  	select * from lspinfo where 1=1
    <if test="id > 0">
    	and id=#{id}
    </if>
    <if test="tunnelId > 0">
    	and TunnelId=#{tunnelId}
    </if>
    <if test="segmentId > 0">
    	and segmentId=#{segmentId}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultType="Lsp">
    select 
    <include refid="Base_Column_List" />
    from lspinfo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from lspinfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="Lsp">
    insert into lspinfo (id, tunnelId, pathStatus, 
      aSiteId, zSiteId, aPortId, 
      zPortId, frontLabelValue, backLabelValue, 
      alspbusinessid, zlspbusinessid, atunnelbusinessid, 
      ztunnelbusinessid, segmentId, aoppositeId, 
      zoppositeId, sourceMac, targetMac, 
      frontTtl, backTtl)
    values (#{id,jdbcType=INTEGER}, #{tunnelId,jdbcType=INTEGER}, #{pathStatus,jdbcType=INTEGER}, 
      #{aSiteId,jdbcType=INTEGER}, #{zSiteId,jdbcType=INTEGER}, #{aPortId,jdbcType=INTEGER}, 
      #{zPortId,jdbcType=INTEGER}, #{frontLabelValue,jdbcType=INTEGER}, #{backLabelValue,jdbcType=INTEGER}, 
      #{alspbusinessid,jdbcType=INTEGER}, #{zlspbusinessid,jdbcType=INTEGER}, #{atunnelbusinessid,jdbcType=INTEGER}, 
      #{ztunnelbusinessid,jdbcType=INTEGER}, #{segmentId,jdbcType=INTEGER}, #{aoppositeId,jdbcType=VARCHAR}, 
      #{zoppositeId,jdbcType=VARCHAR}, #{sourceMac,jdbcType=VARCHAR}, #{targetMac,jdbcType=VARCHAR}, 
      #{frontTtl,jdbcType=INTEGER}, #{backTtl,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="Lsp">
    insert into lspinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="tunnelid != null">
        tunnelId,
      </if>
      <if test="pathstatus != null">
        pathStatus,
      </if>
      <if test="asiteid != null">
        aSiteId,
      </if>
      <if test="zsiteid != null">
        zSiteId,
      </if>
      <if test="aportid != null">
        aPortId,
      </if>
      <if test="zportid != null">
        zPortId,
      </if>
      <if test="frontlabelvalue != null">
        frontLabelValue,
      </if>
      <if test="backlabelvalue != null">
        backLabelValue,
      </if>
      <if test="alspbusinessid != null">
        alspbusinessid,
      </if>
      <if test="zlspbusinessid != null">
        zlspbusinessid,
      </if>
      <if test="atunnelbusinessid != null">
        atunnelbusinessid,
      </if>
      <if test="ztunnelbusinessid != null">
        ztunnelbusinessid,
      </if>
      <if test="segmentid != null">
        segmentId,
      </if>
      <if test="aoppositeid != null">
        aoppositeId,
      </if>
      <if test="zoppositeid != null">
        zoppositeId,
      </if>
      <if test="sourcemac != null">
        sourceMac,
      </if>
      <if test="targetmac != null">
        targetMac,
      </if>
      <if test="frontttl != null">
        frontTtl,
      </if>
      <if test="backttl != null">
        backTtl,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="tunnelid != null">
        #{tunnelid,jdbcType=INTEGER},
      </if>
      <if test="pathstatus != null">
        #{pathstatus,jdbcType=INTEGER},
      </if>
      <if test="asiteid != null">
        #{asiteid,jdbcType=INTEGER},
      </if>
      <if test="zsiteid != null">
        #{zsiteid,jdbcType=INTEGER},
      </if>
      <if test="aportid != null">
        #{aportid,jdbcType=INTEGER},
      </if>
      <if test="zportid != null">
        #{zportid,jdbcType=INTEGER},
      </if>
      <if test="frontlabelvalue != null">
        #{frontlabelvalue,jdbcType=INTEGER},
      </if>
      <if test="backlabelvalue != null">
        #{backlabelvalue,jdbcType=INTEGER},
      </if>
      <if test="alspbusinessid != null">
        #{alspbusinessid,jdbcType=INTEGER},
      </if>
      <if test="zlspbusinessid != null">
        #{zlspbusinessid,jdbcType=INTEGER},
      </if>
      <if test="atunnelbusinessid != null">
        #{atunnelbusinessid,jdbcType=INTEGER},
      </if>
      <if test="ztunnelbusinessid != null">
        #{ztunnelbusinessid,jdbcType=INTEGER},
      </if>
      <if test="segmentid != null">
        #{segmentid,jdbcType=INTEGER},
      </if>
      <if test="aoppositeid != null">
        #{aoppositeid,jdbcType=VARCHAR},
      </if>
      <if test="zoppositeid != null">
        #{zoppositeid,jdbcType=VARCHAR},
      </if>
      <if test="sourcemac != null">
        #{sourcemac,jdbcType=VARCHAR},
      </if>
      <if test="targetmac != null">
        #{targetmac,jdbcType=VARCHAR},
      </if>
      <if test="frontttl != null">
        #{frontttl,jdbcType=INTEGER},
      </if>
      <if test="backttl != null">
        #{backttl,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="Lsp">
    update lspinfo
    <set>
      <if test="tunnelid != null">
        tunnelId = #{tunnelid,jdbcType=INTEGER},
      </if>
      <if test="pathstatus != null">
        pathStatus = #{pathstatus,jdbcType=INTEGER},
      </if>
      <if test="asiteid != null">
        aSiteId = #{asiteid,jdbcType=INTEGER},
      </if>
      <if test="zsiteid != null">
        zSiteId = #{zsiteid,jdbcType=INTEGER},
      </if>
      <if test="aportid != null">
        aPortId = #{aportid,jdbcType=INTEGER},
      </if>
      <if test="zportid != null">
        zPortId = #{zportid,jdbcType=INTEGER},
      </if>
      <if test="frontlabelvalue != null">
        frontLabelValue = #{frontlabelvalue,jdbcType=INTEGER},
      </if>
      <if test="backlabelvalue != null">
        backLabelValue = #{backlabelvalue,jdbcType=INTEGER},
      </if>
      <if test="alspbusinessid != null">
        alspbusinessid = #{alspbusinessid,jdbcType=INTEGER},
      </if>
      <if test="zlspbusinessid != null">
        zlspbusinessid = #{zlspbusinessid,jdbcType=INTEGER},
      </if>
      <if test="atunnelbusinessid != null">
        atunnelbusinessid = #{atunnelbusinessid,jdbcType=INTEGER},
      </if>
      <if test="ztunnelbusinessid != null">
        ztunnelbusinessid = #{ztunnelbusinessid,jdbcType=INTEGER},
      </if>
      <if test="segmentid != null">
        segmentId = #{segmentid,jdbcType=INTEGER},
      </if>
      <if test="aoppositeid != null">
        aoppositeId = #{aoppositeid,jdbcType=VARCHAR},
      </if>
      <if test="zoppositeid != null">
        zoppositeId = #{zoppositeid,jdbcType=VARCHAR},
      </if>
      <if test="sourcemac != null">
        sourceMac = #{sourcemac,jdbcType=VARCHAR},
      </if>
      <if test="targetmac != null">
        targetMac = #{targetmac,jdbcType=VARCHAR},
      </if>
      <if test="frontttl != null">
        frontTtl = #{frontttl,jdbcType=INTEGER},
      </if>
      <if test="backttl != null">
        backTtl = #{backttl,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="Lsp">
    update lspinfo
    set tunnelId = #{tunnelId,jdbcType=INTEGER},
      pathStatus = #{pathStatus,jdbcType=INTEGER},
      aSiteId = #{aSiteId,jdbcType=INTEGER},
      zSiteId = #{zSiteId,jdbcType=INTEGER},
      aPortId = #{aPortId,jdbcType=INTEGER},
      zPortId = #{zPortId,jdbcType=INTEGER},
      frontLabelValue = #{frontLabelValue,jdbcType=INTEGER},
      backLabelValue = #{backLabelValue,jdbcType=INTEGER},
      alspbusinessid = #{alspbusinessid,jdbcType=INTEGER},
      zlspbusinessid = #{zlspbusinessid,jdbcType=INTEGER},
      atunnelbusinessid = #{atunnelbusinessid,jdbcType=INTEGER},
      ztunnelbusinessid = #{ztunnelbusinessid,jdbcType=INTEGER},
      segmentId = #{segmentId,jdbcType=INTEGER},
      aoppositeId = #{aoppositeId,jdbcType=VARCHAR},
      zoppositeId = #{zoppositeId,jdbcType=VARCHAR},
      sourceMac = #{sourceMac,jdbcType=VARCHAR},
      targetMac = #{targetMac,jdbcType=VARCHAR},
      frontTtl = #{frontTtl,jdbcType=INTEGER},
      backTtl = #{backTtl,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="queryBySiteId" parameterType="map" resultType="Lsp">
	select * from lspinfo where Tunnelid =#{tunnelId}  and (asiteid=#{siteId} or zsiteid=#{siteId}) order by id
  </select>
  
  <select id="queryByTunnnelId" parameterType="java.lang.Integer" resultType="Lsp">
	select * from lspinfo where Tunnelid =#{tunnelId}
  </select>
  
  <delete id="deleteByTunnelID" parameterType="java.lang.Integer">
    delete from lspinfo
    where Tunnelid =#{tunnelId}
  </delete>
  
  <select id="selectByPort" parameterType="java.lang.Integer" resultType="Lsp">
	select * from lspinfo where aportid=#{aPortId} or zportid=#{zPortId}
  </select>
  
  <insert id="insert_lspWhSearchdo"  >
	insert into lspinfo (tunnelId,pathStatus,aSiteId,zSiteId,aPortId,zPortId,frontLabelValue,backLabelValue,alspbusinessid,zlspbusinessid,
	atunnelbusinessid,ztunnelbusinessid,segmentId,aoppositeId,zoppositeId,sourceMac,targetMac,frontTtl,backTtl) values ( #{newTunnelId},0,
	#{lsp.aSiteId},#{lsp2.zSiteId},#{lsp.aPortId},#{lsp.zPortId},#{lsp.frontLabelValue},
	#{lsp.backLabelValue},0,0,#{lsp.atunnelbusinessid},#{lsp2.ztunnelbusinessid},0,#{lsp.aoppositeId},
	#{lsp2.zoppositeId} ,#{lsp.sourceMac} ,#{lsp.targetMac} ,#{lsp.frontTtl} ,#{lsp.backTtl} )
  </insert>
  <select id="queryByPort" parameterType="java.lang.Integer" resultType="Lsp">
  select * from lspinfo where aportid=#{0} or zportid=#{0}
  </select>
  <select id="queryOutLabelUsable"  resultType="Lsp">
	select backLabelValue from lspinfo where aportid=#{1} or zportid=#{1} and backLabelValue = #{1}
  </select>
  
  <select id="selectBySiteId" parameterType="java.lang.Integer" resultType="Lsp">
  	select * FROM lspinfo where  aSiteId =#{siteId}  or zSiteId =#{siteId}
  </select>
  
  <select id="queryBySegmentId" parameterType="java.lang.Integer" resultType="Lsp">
  	select * FROM lspinfo where  segmentId=#{0}
  </select>
  
  <select id="querySychro" resultType="Lsp">
  	select * from lspinfo l 
  	<if test="role == '' ">
  		<if test="size == 1">
  			 where l.tunnelId in (select t.tunnelId FROM tunnel t where t.asiteid=#{siteId} OR t.zsiteid=#{siteId} ) and ((l.aSiteId=#{siteId} and 
  			 l.atunnelbusinessid=#{atunnelbusinessid})  or (l.zSiteId =#{siteId} and l.ztunnelbusinessid=#{ztunnelbusinessid}))
  		</if>
  		<if test="size == 2">
  			where (l.zSiteId=#{siteId} AND l.ztunnelbusinessid=#{ztunnelbusinessid}) OR (l.aSiteId=#{siteId} and l.atunnelbusinessid=#{atunnelbusinessid})
  		</if>
  	</if>
  	<if test="role =='ingress' ">
  		 where l.tunnelId in (select t.tunnelId FROM tunnel t where t.asiteid=#{siteId} and tunneltype!='0' ) and l.atunnelbusinessid=#{atunnelbusinessid}
  	</if>
  	<if test="role =='egress' ">
  		 where l.tunnelId in (select t.tunnelId FROM tunnel t where t.zsiteid=#{siteId} and tunneltype!='0' ) and l.ztunnelbusinessid=#{ztunnelbusinessid}
  	</if>
  	<if test="role == 'xc' ">
  		where (l.zSiteId=#{siteId} AND l.ztunnelbusinessid=#{ztunnelbusinessid}) OR (l.aSiteId=#{siteId} and l.atunnelbusinessid=#{atunnelbusinessid})
  	</if>
  </select>
  
  <select id="queryBySiteIdAndTunnelId" resultType="Lsp">
  	select * FROM lspinfo where  (aSiteId = #{0}  or zSiteId = #{0}) and tunnelId = #{1} 
  </select>
  
  <select id="selectBusinessId" resultType="Lsp">
  	select aSiteId,zSiteId,atunnelbusinessid,ztunnelbusinessid,tunnelId from lspinfo lag where lag.asiteid=#{0} or lag.zsiteid=#{0}
  </select>
  
   <select id="queryBySiteIdAndTunnelserviceid" resultType="Lsp" parameterType="map">
   <if test="type==null or type=='' ">
       select * from lspinfo lag where (lag.asiteid=#{siteId} and lag.atunnelbusinessid =#{tunnelServiceId}) OR (lag.zsiteid=#{siteId} and lag.ztunnelbusinessid =#{tunnelServiceId})
   </if>
   <if test="type!=null and type!='' ">
       <if test="type==1">
         select * from lspinfo lag where (lag.zsiteid=#{siteId} and lag.ztunnelbusinessid =#{tunnelServiceId})
       </if>
       
       <if test="type!=1">
         select * from lspinfo lag where (lag.asiteid=#{siteId} and lag.atunnelbusinessid =#{tunnelServiceId})
       </if>
   </if>
  
  </select>
  
  
  <select id="north" resultType="Lsp">
  	SELECT
	l.aPortId,
	l.aSiteId,
	l.id,
	l.tunnelId,
	l.frontLabelValue,
	l.backLabelValue,
	l.zSiteId,
l.zPortId,
	t.aOutVlanValue AS alspbusinessid,
	t.zOutVlanValue as zlspbusinessid
FROM
	`lspinfo` l
INNER JOIN tunnel t ON l.tunnelId = t.tunnelId;
  </select>
</mapper>